"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const authRole_1 = __importDefault(require("../middlewares/authRole"));
const admin_dependencyhandler_1 = require("../dependencyHandlers/admin.dependencyhandler");
const router = (0, express_1.Router)();
router.post("/login", admin_dependencyhandler_1.adminController.login.bind(admin_dependencyhandler_1.adminController));
router.post("/refresh-token", admin_dependencyhandler_1.adminController.refreshToken.bind(admin_dependencyhandler_1.adminController));
router.get("/users", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.getAllUsers.bind(admin_dependencyhandler_1.adminController));
router.get("/tutors", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.getAllTutors.bind(admin_dependencyhandler_1.adminController));
router.put("/users/block/:email", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.blockUnblockUser.bind(admin_dependencyhandler_1.adminController));
router.put("/tutors/block/:email", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.blockUnblockTutor.bind(admin_dependencyhandler_1.adminController));
router.get("/dashboard", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.getDashboard.bind(admin_dependencyhandler_1.adminController));
router.put("/tutors/verify", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.approveTutor.bind(admin_dependencyhandler_1.adminController));
router.get("/category", (0, authRole_1.default)(["admin", "instructor"]), admin_dependencyhandler_1.adminController.getCatgeories.bind(admin_dependencyhandler_1.adminController));
router.post("/category", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.addCategory.bind(admin_dependencyhandler_1.adminController));
router.patch(`/category/delete/:id`, (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.deleteCategory.bind(admin_dependencyhandler_1.adminController));
router.patch(`/category/restore/:id`, (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.restoreCategory.bind(admin_dependencyhandler_1.adminController));
router.get("/courses", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.getCourses.bind(admin_dependencyhandler_1.adminController));
router.put("/courses/:id", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.softDeleteCourse.bind(admin_dependencyhandler_1.adminController));
router.put("/courses/recover/:id", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.recoverCourse.bind(admin_dependencyhandler_1.adminController));
router.get("/reviews", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.getAllReviews.bind(admin_dependencyhandler_1.adminController));
router.put("/reviews/:id/hide", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.hideReview.bind(admin_dependencyhandler_1.adminController));
router.put("/reviews/:id/unhide", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.unhideReview.bind(admin_dependencyhandler_1.adminController));
router.delete("/reviews/:id/", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.deleteReview.bind(admin_dependencyhandler_1.adminController));
router.delete("/tutors/reject/:email", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.rejectTutor.bind(admin_dependencyhandler_1.adminController));
router.get("/wallet", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.getWallet.bind(admin_dependencyhandler_1.adminController));
router.get("/complaints", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.getComplaints.bind(admin_dependencyhandler_1.adminController));
router.put("/complaints/:id", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.responseComplaint.bind(admin_dependencyhandler_1.adminController));
router.get("/course-status", admin_dependencyhandler_1.adminController.getCourseStats.bind(admin_dependencyhandler_1.adminController));
router.get("/income-status", admin_dependencyhandler_1.adminController.getIncomeStats.bind(admin_dependencyhandler_1.adminController));
router.get("/courses/:courseId", admin_dependencyhandler_1.adminController.getSpecificCourseforAdmin.bind(admin_dependencyhandler_1.adminController));
router.get("/tutor-view/:id", (0, authRole_1.default)(["admin"]), admin_dependencyhandler_1.adminController.getSpecificTutor.bind(admin_dependencyhandler_1.adminController));
router.get("/notifications/:userId", admin_dependencyhandler_1.adminController.getNotifications.bind(admin_dependencyhandler_1.adminController));
router.put("/notifications/read/:notificationId", admin_dependencyhandler_1.adminController.markAsRead.bind(admin_dependencyhandler_1.adminController));
router.post("/logout", admin_dependencyhandler_1.adminController.logOut.bind(admin_dependencyhandler_1.adminController));
exports.default = router;
